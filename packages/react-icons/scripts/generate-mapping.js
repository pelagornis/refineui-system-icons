#!/usr/bin/env node

/**
 * React Icons Package - Icon Mapping Generator
 *
 * This script reads the fonts/icon-mapping.json file and generates
 * TypeScript mapping files for the React package.
 */

const fs = require("fs");
const path = require("path");

// Path configuration
const rootDir = path.resolve(__dirname, "../../../");
const mappingFile = path.join(rootDir, "fonts/icon-mapping.json");
const outputFile = path.join(__dirname, "../src/generated-mapping.ts");

console.log("üîß Generating React Icons mapping...");

try {
  // Read icon-mapping.json
  const mappingData = JSON.parse(fs.readFileSync(mappingFile, "utf8"));

  // Generate TypeScript mapping file
  let tsContent = `/**
 * Auto-generated icon mapping for React Icons package
 * Generated from fonts/icon-mapping.json
 * 
 * DO NOT EDIT THIS FILE MANUALLY
 * Run: npm run generate-mapping
 */

export interface IconMapping {
  unicode: number;
  fontFamily: string;
  name: string;
  size: string;
  style: string;
}

export const ICON_MAPPING: Record<string, IconMapping> = {
`;

  // Add all icons to mapping
  Object.entries(mappingData.icons).forEach(([key, icon]) => {
    tsContent += `  "${key}": {
    unicode: ${icon.unicode},
    fontFamily: "${
      icon.style === "regular"
        ? "RefineUI-System-Icons-Regular"
        : "RefineUI-System-Icons-Filled"
    }",
    name: "${icon.name}",
    size: "${icon.size}",
    style: "${icon.style}"
  },\n`;
  });

  tsContent += `};

export const ICON_NAMES = [
${Object.keys(mappingData.icons)
  .map((key) => `  "${key}"`)
  .join(",\n")}
];

export function getIconUnicode(iconName: string): number | null {
  return ICON_MAPPING[iconName]?.unicode || null;
}

export function getIconFontFamily(iconName: string): string | null {
  return ICON_MAPPING[iconName]?.fontFamily || null;
}
`;

  // Write file
  fs.writeFileSync(outputFile, tsContent);

  console.log(`‚úÖ Generated mapping file: ${outputFile}`);
  console.log(`üìä Total icons: ${Object.keys(mappingData.icons).length}`);
} catch (error) {
  console.error("‚ùå Error generating mapping:", error);
  process.exit(1);
}
