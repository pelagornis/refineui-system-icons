name: Release All Platforms

on:
  push:
    tags:
      - "v*" # v1.0.0, v1.1.0 tags trigger release
  workflow_dispatch: # Manual execution available
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
        default: "1.0.0"

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        node-version: ["18", "20"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run release script
        run: |
          python3 scripts/release_all_platforms.py
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: refineui-icons-release-${{ matrix.python-version }}-${{ matrix.node-version }}
          path: release/
          retention-days: 30

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.zip
            release/release-manifest.json
          body: |
            ## üéâ RefineUI System Icons Release

            ### üì¶ Included Platforms
            - üåê **Web**: SVG icons and CSS
            - ü§ñ **Android**: XML drawables
            - üçé **iOS**: Swift code
            - ü¶ã **Flutter**: Dart code

            ### üîß Build Information
            - Python: ${{ matrix.python-version }}
            - Node.js: ${{ matrix.node-version }}
            - Build time: ${{ github.event.head_commit.timestamp }}

            ### üìÅ Download
            Download ZIP files for each platform and use them.

            For more details, see [README.md](https://github.com/${{ github.repository }}/blob/main/README.md).
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Release verification job
  verify-release:
    needs: release
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: refineui-icons-release-3.11-20 # Use latest version

      - name: Verify release structure
        run: |
          echo "üìã Verifying release file structure..."

          # Check release directory
          ls -la release/

          # Check ZIP files
          find release/ -name "*.zip" -exec unzip -l {} \;

          # Check manifest file
          if [ -f "release/release-manifest.json" ]; then
            echo "‚úÖ Release manifest file exists"
            cat release/release-manifest.json
          else
            echo "‚ùå Release manifest file not found"
            exit 1
          fi

          echo "‚úÖ Release verification completed"

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const manifestPath = path.join('release', 'release-manifest.json');
              if (fs.existsSync(manifestPath)) {
                const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
                
                const comment = `## üéâ Release verification completed
                
                ### üìä Release information
                - **Version**: ${manifest.version}
                - **Release date**: ${manifest.release_date}
                - **Supported platforms**: ${Object.keys(manifest.platforms).join(', ')}
                
                ### üîß Build information
                - Node.js: ${manifest.build_info.node_version}
                - Python: ${manifest.build_info.python_version}
                - npm: ${manifest.build_info.npm_version}
                
                All platforms built successfully! üöÄ`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.error('Release verification failed:', error);
            }
