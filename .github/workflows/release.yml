name: Release and Publish

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          npm ci
          pip install -r requirements.txt

      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Verify all versions
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"

          # Verify versions are already updated by release-all.yml
          echo "Verifying all versions are $VERSION:"

          # Check root package.json
          ROOT_VERSION=$(grep '"version"' package.json | sed 's/.*"version": "\([^"]*\)".*/\1/')
          echo "Root package.json version: $ROOT_VERSION"

          # Check Flutter pubspec.yaml
          FLUTTER_VERSION=$(grep '^version:' flutter/pubspec.yaml | sed 's/version: //')
          echo "Flutter pubspec.yaml version: $FLUTTER_VERSION"

          # Check Android build.gradle.kts
          ANDROID_VERSION=$(grep 'versionName' android/library/build.gradle.kts | sed 's/.*versionName = "\([^"]*\)".*/\1/')
          echo "Android build.gradle.kts version: $ANDROID_VERSION"

          # Verify all versions match
          if [ "$ROOT_VERSION" != "$VERSION" ] || [ "$FLUTTER_VERSION" != "$VERSION" ] || [ "$ANDROID_VERSION" != "$VERSION" ]; then
            echo "❌ Version mismatch! Expected: $VERSION"
            echo "  Root package.json: $ROOT_VERSION"
            echo "  Flutter pubspec.yaml: $FLUTTER_VERSION"
            echo "  Android build.gradle.kts: $ANDROID_VERSION"
            echo "Please ensure release-all.yml has run first to update versions."
            exit 1
          fi

          echo "✅ All versions verified: $VERSION"

      - name: Build
        run: |
          python3 scripts/release_all_platforms.py

      - name: Publish to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_RELEASE_TOKEN }}" > .npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.zip
            release/release-manifest.json
          body: |
            ## 🎉 Release ${{ steps.get_version.outputs.version }}

            ### 📦 Platforms
            - 🌐 Web (SVG + CSS)
            - 🤖 Android (XML)
            - 🍎 iOS (Swift)
            - 🦋 Flutter (Dart)

            ### 📦 NPM Packages
            ```bash
            npm install @refineui/react-icons
            npm install @refineui/react-native-icons
            npm install @refineui/web-icons
            ```

            ### 📁 Downloads
            Platform-specific ZIP files are attached below.
        env:
          GITHUB_TOKEN: ${{ secrets.PELAGORNIS }}
