name: Release Android Platform

on:
  push:
    tags:
      - "*"

jobs:
  release-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set Gradle Java Home
        run: |
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "GRADLE_OPTS=-Dorg.gradle.java.home=$JAVA_HOME" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Verify Android version
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"

          # Verify versions are already updated by release-all.yml
          echo "Verifying Android version is $VERSION:"

          # Check root package.json
          ROOT_VERSION=$(grep '"version"' package.json | sed 's/.*"version": "\([^"]*\)".*/\1/')
          echo "Root package.json version: $ROOT_VERSION"

          # Check Android build.gradle.kts
          ANDROID_VERSION=$(grep 'versionName' android/library/build.gradle.kts | sed 's/.*versionName = "\([^"]*\)".*/\1/')
          echo "Android build.gradle.kts version: $ANDROID_VERSION"

          if [ "$ROOT_VERSION" != "$VERSION" ] || [ "$ANDROID_VERSION" != "$VERSION" ]; then
            echo "‚ùå Version mismatch! Expected: $VERSION"
            echo "  Root package.json: $ROOT_VERSION"
            echo "  Android build.gradle.kts: $ANDROID_VERSION"
            echo "Please ensure release-all.yml has run first to update versions."
            exit 1
          fi

          echo "‚úÖ Android version verified: $VERSION"

      - name: Build Android platform
        run: |
          python3 scripts/generate_android_xml.py

      - name: Validate Android package
        run: |
          cd android
          ./gradlew assembleRelease
          ./gradlew lintRelease

      - name: Create Android Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          body: |
            ## üéâ Android Platform Release ${{ steps.get_version.outputs.version }}

            ### üì¶ Installation
            ```gradle
            // build.gradle
            implementation 'com.pelagornis:library:latest.release'

            // settings.gradle
            include ':library'
            project(':library').projectDir = new File('path/to/android/library')
            ```

            ### ü§ñ Features
            - Native Android integration
            - Vector drawables for all screen densities
            - XML resource files
            - 434+ icons with multiple sizes and styles
            - Optimized for Android performance

            ### üìÅ Files
            Android library source code and resources are attached below.
        env:
          GITHUB_TOKEN: ${{ secrets.PELAGORNIS }}
